# Test package every time

name: Make env

# Controls when the action will run.

# Trigger this code when a new release is published
on:
  workflow_dispatch:
  release:
    types: [ created ]
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.install }} ${{matrix.installer}}-env on (py${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      installer: ${{ matrix.installer }}
    strategy:
      fail-fast: false
      matrix:
        install: [optim_tools, full, fast]
        installer: [mamba, conda]
        os: [ubuntu-latest, ubuntu-20.04]
        python-version: ['3.8', '3.9', '3.10']
        shouldSkipConda:
          - ${{ github.event_name == 'pull_request'}}

        exclude:
          # Conda takes a long time, only do it when the PR is merged
          - installer: conda
            os: ubuntu-latest
          - installer: conda
            shouldSkipConda: true

          # This one oddly takes a long time since #75?!
          - installer: conda
            install: fast

          # Full install only for py3.8 because of synda requirement
          - install: full
            python-version: '3.9'
          - install: full
            python-version: '3.10'

          # Py>3.8 only on ubuntu latest
          - os: ubuntu-20.04
            python-version: '3.9'
          - os: ubuntu-20.04
            python-version: '3.10'

          # Testing optim_esm_tools should be light weight
          - install: optim_tools
            installer: conda
          - install: optim_tools
            python-version: '3.9'
          - install: optim_tools
            python-version: '3.10'
          - install: optim_tools
            os: ubuntu-latest

    defaults:
      run:
        # This is needed otherwise we can't activate the conda installation
        shell: bash -l {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        if: matrix.installer == 'mamba'
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            use-mamba: true
            auto-update-conda: true
            python-version: ${{ matrix.python-version }}
            activate-environment: 'synda'
            mamba-version: '*'
      - uses: conda-incubator/setup-miniconda@v2
        if: matrix.installer == 'conda'
        with:
            auto-update-conda: true
            python-version: ${{ matrix.python-version }}
            activate-environment: 'synda'
      - name: run install
        if: matrix.install == 'full' || matrix.install == 'optim_tools'
        run:
          |
            bash install_software.sh --installer $installer
      - name: run install
        if: matrix.install == 'fast'
        run:
          |
            bash install_software.sh --no_synda --no_cdo --installer $installer
      - name: run tests
        run:
          |
          pytest test
      - name: run optim_tools-tests
#         env:
#           OPEN_ID: ${{ secrets.OPEN_ID }}
#           OPEN_ID_KEY: ${{ secrets.OPEN_ID_KEY }}
        if: matrix.install == 'optim_tools'
        run:
            |
            git clone https://github.com/JoranAngevaare/optim_esm_tools.git ../oet
            #             bash ../oet/.github/scripts/write_synda_cridentials.sh
            #             bash ../oet/.github/scripts/download_example_data.sh
            bash ../oet/.github/scripts/install_tex.sh
            pip install -e ../oet
            pytest -vx ../oet
      - name: List packages
        run:
           |
           conda list
           echo 'Pip freeze'
           pip freeze
